---

name: Инструкции (Statements)
theory: |

  Инструкция — это команда для компьютера. Код на Java — это набор инструкций, которые, как правило, отделяются друг от друга символом `;`.
  Вот пример кода с двумя инструкциями:

  ```java
  println("Mother of Dragons.");
  println("Dracarys!");
  ```

  При запуске этого кода на экран последовательно выводятся два предложения:

  ```
  Mother of Dragons.
  Dracarys!
  ```

  Теоретически инструкции можно написать последовательно друг за другом без переноса на новую строчку:

  ```java
  println("Mother of Dragons."); println("Dracarys!");
  ```

  Результат на экране будет таким же, но на практике такой подход считается плохим.
  
  **Почему написание нескольких инструкций в одну строку считается плохим**
  С опытом у программистов вырабатывается навык быстрого чтения кода, как некоторые читают тексты - "по диагонали", только в программировании это скорее "по началам строк" - взгляд быстро бежит сверху-вниз и фиксирует только начало инструкций, сразу отметая неважные и продолжая читать инструкцию только в случае, если вы понимаете, что инструкция важна. Например, вы, среди большого кол-ва строчек кода, ищите строчку, которая что-то выводит на печать - и, увидев выражение 'println', останавливаетесь и читаете уже инструкцию целеком. Так вот - если инструкция `println` при этом окажется правее какого-то другого выражения - Вы просто её пропустите и не найдёте. Это сильно сбивает с толку, по-этому эта практика и считается плохой.

  **Ставить ли точки с запятыми в конце инструкций?**
  В JShell`е (где мы пока и пишем код, поскольку не изучили ещё классы), действует упрощённая схема, согласно которой символ `;` необязателен и вместо него границей между двумя инструкциями может выступать переход на следующую строку.
  Работает это так: при переходе на новую строку Java пытается интерпретировать уже введённую строку как отдельную инструкцию и, если получается, то результат прининяется как часть программы, если нет - вы получаете дополнительную строку с отступом, где продолжаете писать инструкци. Так происходит до тех пор, пока выражение не обретёт целостность и не появится возможность интерпретировать его как полностью введённую инструкцию:

  ```
  jshell> println(
     ...> "Stannis"
     ...> )
  Stannis

  jshell>
  ```
  По-этому, не смотря на их необязательность, в примерах кода мы, начиная с данного урока, всё-таки будем проставлять символы `;` в конце каждой инструкции, что бы вы загодя готовились к переходу на работу с классами, где от подхода с переходами строк всё равно придётся отказываться. Что бы писать более сложные программы на Java, все инструкции придётся отделять от других символом `;`.

instructions: |
  Выведите на экран друг за другом три имени: `Robert`, `Stannis`, `Renly`. В результате на экране должно отобразиться:

  ```
  Robert
  Stannis
  Renly
  ```
  
  Для каждого имени используйте свой собственный вызов `println`.
  (Т.к. они не обязательны, мы не сможем это проверить, но всё-таки старайтесь приучать себя ставить символы `;` в конце инструкций - вам же потом будет проще)
tips: []

definitions:
  - name: Инструкция (statement)
    description: |
      Команда для компьютера, написанная на языке программирования. Код на Java — это набор инструкций, отделенных друг от друга символом `;`.
      В JShell`е вместо него может выступать символ перехода на следующую строку.
