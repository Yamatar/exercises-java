---

name: Окружение
theory: |

  Какое значение окажется внутри переменной `result` после выполнения кода?

  ```java
  public static void main(String[] args) {
    int age = 5;
    int result = generate();
  }

  public static int generate() {
    return age + 3;
  }
  ```

  Правильный ответ: код упадёт с ошибкой. Потому что внутри функции нет переменной с именем `age`, но функция пытается её использовать.

  Функция — изолированный черный ящик. Всё, что определено снаружи функции, никак не связано с тем, что определено внутри. В теле функции находится программа, изолированная от внешней среды (внешнего окружения).

  ---

  Рассмотрим другой пример:

  ```java
  public static void main(String[] args) {
    int age = 5;
    int result = generate();
  }

  public static int generate() {
    int age = 10;
    return age + 3;
  }
  ```

  В данном случае результатом будет число `13`. Внешнее значение `age = 5` никак не влияет на код функции.

instructions: |

  Это задание не связано напрямую с уроком, это просто еще одно полезное упражнение по работе с функциями.

  Напишите функцию `getAgeDifference`, которая принимает два года рождения и возвращает строку с разницей в возрасте в виде `The age difference is 11`.

tips:
  - |
    Напомним, что в Java есть функция `Math.abs`, которая возвращает модуль переданного числа: например, `Math.abs(-12)` вернёт `12`.
