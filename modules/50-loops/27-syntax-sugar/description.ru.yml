---

name: Синтаксический сахар
theory: |

  Подобные конструкции `index = index + 1` в Java используются довольно часто, поэтому создатели языка добавили сокращенный вариант записи: `index += 1`.

  Важно понимать, что отличия исключительно в способе записи.

  Такие сокращения принято называть «**синтаксическим сахаром**», потому что они делают процесс написания кода немного проще и приятнее, «подслащивая» его :)

  Существуют сокращённые формы для всех арифметических операций и для конкатенации строк:

  - `a = a + 1` → `a += 1`
  - `a = a - 1` → `a -= 1`
  - `a = a * 2` → `a *= 2`
  - `a = a / 1` → `a /= 1`
  - `a = a + "bla"` → `a += "bla"`

instructions: |

  Реализуйте функцию `countChars`, которая считает повторения указанного символа в строке. (В программировании говорят «количество вхождений символа в строку»).
#Да не умеем мы с символами работать! Но можно переделать задание на количество вхождений подстроки в строку. Или все-таки сделать урок про символы, все равно мы то и дело
#к этому скатываемся
  Функция принимает на вход два параметра: строку и символ. Функция возвращает число.

  Пример вызова:

  ```java
  String str = "If I look back I am lost";
  countChars(str, 'I'); // => 3
  countChars(str, 'z'); // => 0
  countChars(str, 'o'); // => 3
  ```

  Идея в том, чтобы создать отдельную переменную-счётчик и увеличивать её на 1 каждый раз, когда в строке встречается указанный символ. Вам понадобится вложить условный оператор в тело цикла. Для увеличения счётчика используйте синтаксический сахар.

tips: []
