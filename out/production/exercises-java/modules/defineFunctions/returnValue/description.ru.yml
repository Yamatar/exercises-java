---

name: Возврат значений
theory: |

  В модуле «Вызов функций» мы в основном работали с функциями, которые возвращают результат, а не выводят его на экран. Честно говоря, вывод на экран — фактически обучающий элемент. В реальном коде на экран никто ничего не выводит (за исключением утилит командной строки). Функции возвращают данные, которые потребляются другими функциями.

  Научиться писать функции, которые возвращают информацию — первый шаг на пути к построению по-настоящему полезных программ.

  Начнем с тривиального примера: создадим и вызовем функцию, которая принимает два числа и возвращает первое число минус второе. Назовём её `sub`, от англ. "subtract" — «вычесть»:

  ```java
  public static void main(String[] args) {
    System.out.print(sub(10, 7));
  }

  public static int sub(int a, int b) {
    int result = a - b;
    return result;
  }
  ```

  <pre class='hexlet-basics-output'>3</pre>

  Обратите внимание: мы знаем, что **вызов функции — выражение**, поэтому мы передали вызов одной функции в вызов другой функции — `System.out.print(sub(10, 7))`.

  Возврат задаётся специальной инструкцией `return`. Cправа от `return` помещается выражение. Любое выражение. То есть, мы можем делать вычисления сразу после `return` без создания переменной `result`:

  ```java
  public static void main(String[] args) {
    System.out.print(sub(2018, 1975));
  }

  public static int sub(int a, int b)
  {
    return a - b;
  }
  ```

  <pre class='hexlet-basics-output'>43</pre>

  После исполнения функции возвращенный результат «встаёт» на место вызова.

instructions: |

  Сэм создаёт генеалогические деревья разных семей. Ему постоянно приходится рассчитывать количество места, занимаемое именами родителей на экране.

  Создайте функцию `getParentNamesTotalLength` для Сэма. Она должна принимать один аргумент — имя ребенка, и возвращать количество символов в именах матери и отца суммарно. Функция не должна выводить ничего на экран, только возвращать число.

  Для реализации используйте уже существующие функции `Functions.parentFor` и `length`:

  * Получение имени матери `Functions.parentFor(child, "mother")`, где `child` — имя ребёнка.
  * Получение имени отца `Functions.parentFor(child, "father")`, где `child` — имя ребёнка
  * Получение длины строки: `str.length`, где `str` — строка

  Вам не нужно вызывать свою функцию, только определить её.

tips: []
